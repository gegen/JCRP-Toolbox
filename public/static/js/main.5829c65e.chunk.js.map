{"version":3,"sources":["MenuApi.js","App.js","serviceWorker.js","index.js"],"names":["Menu","title","children","useState","display","setDisplay","subMenuOrder","setSubMenuOrder","listIndex","setListIndex","menuTitle","menuStructure","i","length","props","label","itemCount","Children","toArray","handleMessage","useCallback","event","data","type","undefined","toogle","console","error","value","currentItem","restricted","Axios","post","JSON","stringify","SubMenu","prev","onSelect","filter","elm","index","useEffect","window","addEventListener","removeEventListener","className","map","child","selected","style","float","fontWeight","Item","App","id","setId","name","setName","playerNearby","setPlayerNearby","k9Data","setK9Data","setSpikes","double","spawnObject","obj","nuiCallback","auth","summoned","following","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5829c65e.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, Children } from 'react';\r\nimport Axios from 'axios';\r\n\r\nexport default function Menu({ title, children }) {\r\n    const [display, setDisplay] = useState(false);\r\n    const [subMenuOrder, setSubMenuOrder] = useState([]);\r\n    const [listIndex, setListIndex] = useState(0);\r\n\r\n    let menuTitle = title\r\n    let menuStructure = children\r\n\r\n    for (let i = 0; i < subMenuOrder.length; i++) {\r\n        if (menuStructure.length) {\r\n            if (i === subMenuOrder.length - 1) menuTitle = menuStructure[subMenuOrder[i]].props.title ?? menuStructure[subMenuOrder[i]].props.label\r\n            menuStructure = menuStructure[subMenuOrder[i]].props.children\r\n        } else {\r\n            if (i === subMenuOrder.length - 1) menuTitle = menuStructure.props.title ?? menuStructure.props.label\r\n            menuStructure = menuStructure.props.children\r\n        }\r\n    }\r\n\r\n    const itemCount = Children.toArray(menuStructure).length;\r\n    if (itemCount - 1 < listIndex) {\r\n        setListIndex(itemCount - 1)\r\n    }\r\n\r\n    const handleMessage = useCallback(event => {\r\n        if (!event.data) return\r\n        const data = event.data\r\n        switch (data.type) {\r\n            case 'display':\r\n                data.toogle !== undefined ? setDisplay(data.toogle) : console.error(\"Invalid NUI display toogle\");\r\n                break\r\n            case 'navigation':\r\n                if (data.value === 'Up') {\r\n                    listIndex === 0 ? setListIndex(menuStructure.length - 1) : setListIndex(listIndex - 1)\r\n                } else if (data.value === 'Down') {\r\n                    listIndex === menuStructure.length - 1 ? setListIndex(0) : setListIndex(listIndex + 1)\r\n                } else if (data.value === \"Enter\") {\r\n                    const currentItem = Children.toArray(menuStructure)[listIndex]\r\n                    if (currentItem.props.restricted) {\r\n                        Axios.post('http://jcrp-toolbox/notification', JSON.stringify('~r~Only first responder have access.'))\r\n                    } else {\r\n                        if (currentItem.type === SubMenu) {\r\n                            setListIndex(0)\r\n                            setSubMenuOrder(prev => [...prev, listIndex])\r\n                        }\r\n                        if (currentItem.props.onSelect) currentItem.props.onSelect()\r\n                    }\r\n                } else if (data.value === \"Back\") {\r\n                    if (subMenuOrder.length === 0) {\r\n                        Axios.post('http://jcrp-toolbox/close', JSON.stringify())\r\n                    } else {\r\n                        setListIndex(subMenuOrder[subMenuOrder.length - 1])\r\n                        setSubMenuOrder(subMenuOrder.filter((elm, index) => index < subMenuOrder.length - 1))\r\n                    }\r\n                }\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }, [menuStructure, listIndex, subMenuOrder, setListIndex])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('message', handleMessage)\r\n        return () => {\r\n            window.removeEventListener('message', handleMessage)\r\n        }\r\n    }, [handleMessage])\r\n\r\n    return (\r\n        display &&\r\n        <div className='Container'>\r\n            <div className='title'>{menuTitle}</div>\r\n            <ul>\r\n                {Children.map(menuStructure, (child, index) => {\r\n                    const selected = index === listIndex\r\n                    const { label } = child.props\r\n                    if (child.type === SubMenu) {\r\n                        return <li className={selected ? 'selected' : ''}>{label} <span style={{ float: 'right', fontWeight: 'bold' }}>{'>'}</span></li>\r\n                    }\r\n                    return <li className={selected ? 'selected' : ''}>{label}</li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Item() {\r\n    return null\r\n}\r\n\r\nexport function SubMenu() {\r\n    return null\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Axios from 'axios';\r\nimport Menu, { Item, SubMenu } from './MenuApi';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [id, setId] = useState(0);\r\n    const [name, setName] = useState(\"Invalid\");\r\n    const [playerNearby, setPlayerNearby] = useState(false);\r\n    const [k9Data, setK9Data] = useState({});\r\n\r\n    const handleMessage = useCallback(event => {\r\n        if (!event.data) return\r\n        const data = event.data\r\n        switch (data.type) {\r\n            case 'closestPlayer':\r\n                if (data.id === undefined || data.name === undefined) {\r\n                    setPlayerNearby(false)\r\n                } else {\r\n                    setId(data.id)\r\n                    setName(data.name)\r\n                    setPlayerNearby(true)\r\n                }\r\n                break\r\n            case 'k9Data':\r\n                if (data.data) {\r\n                    setK9Data(data.data)\r\n                }\r\n                break\r\n            default:\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('message', handleMessage)\r\n        return () => {\r\n            window.removeEventListener('message', handleMessage)\r\n        }\r\n    }, [handleMessage])\r\n\r\n    function toggleHandsUp() {\r\n        Axios.post('http://jcrp-toolbox/executeCommand', JSON.stringify('e handsup'))\r\n    }\r\n    function toggleCuff() {\r\n        if (!playerNearby) return Axios.post('http://jcrp-toolbox/displayMsg', JSON.stringify('No player nearby.'))\r\n        Axios.post('http://jcrp-toolbox/executeCommand', JSON.stringify('cuff ' + id))\r\n    }\r\n    function toggleDrag() {\r\n        if (!playerNearby) return Axios.post('http://jcrp-toolbox/displayMsg', JSON.stringify('No player nearby.'))\r\n        Axios.post('http://jcrp-toolbox/executeCommand', JSON.stringify('drag ' + id))\r\n    }\r\n    function setSpikes(double) {\r\n        Axios.post('http://jcrp-toolbox/setSpikes', JSON.stringify(double))\r\n    }\r\n    function removeSpikes() {\r\n        Axios.post('http://jcrp-toolbox/removeSpikes', JSON.stringify())\r\n    }\r\n    function spawnObject(obj) {\r\n        Axios.post('http://jcrp-toolbox/spawnObject', JSON.stringify(obj))\r\n    }\r\n    function deleteCloseObjects() {\r\n        Axios.post('http://jcrp-toolbox/deleteCloseObjects', JSON.stringify())\r\n    }\r\n    function nuiCallback(type, data) {\r\n        Axios.post('http://jcrp-toolbox/' + type, JSON.stringify(data))\r\n    }\r\n\r\n\r\n    return (\r\n        <Menu title=\"JCRP Toolbox\">\r\n            <SubMenu restricted={k9Data.auth !== true} label=\"Actions\" title={playerNearby ? `[${id}] ${name}` : 'No player nearby.'}>\r\n                <Item label=\"Cuff / Uncuff\" onSelect={toggleCuff} />\r\n                <Item label=\"Drag\" onSelect={toggleDrag} />\r\n            </SubMenu>\r\n            {k9Data.summoned ?\r\n                <SubMenu restricted={k9Data.auth !== true} label=\"K9\">\r\n                    <Item label={`Follow${k9Data.following ? 'ing' : ''}`} onSelect={() => nuiCallback('k9follow')} />\r\n                    <Item label=\"Sit\" onSelect={() => nuiCallback('sit')} />\r\n                    <Item label=\"Laydown\" onSelect={() => nuiCallback('laydown')} />\r\n                    <Item label=\"Search player\" onSelect={() => nuiCallback('searchplayer')} />\r\n                    <Item label=\"Search vehicle\" onSelect={() => nuiCallback('searchvehicle')} />\r\n                    <Item label=\"Enter/Exit vehicle\" onSelect={() => nuiCallback('vehicletoggle')} />\r\n                    <Item label=\"Unsummon K9\" onSelect={() => nuiCallback('toggleK9')} />\r\n                </SubMenu>\r\n                :\r\n                <SubMenu restricted={k9Data.auth !== true} label=\"K9\">\r\n                    <SubMenu label=\"Summon K9\">\r\n                        <Item label=\"State Police\" onSelect={() => nuiCallback('toggleK9', 'state')} />\r\n                        <Item label=\"Sheriff\" onSelect={() => nuiCallback('toggleK9', 'sheriff')} />\r\n                        <Item label=\"Police\" onSelect={() => nuiCallback('toggleK9', 'police')} />\r\n                        <Item label=\"Rescue\" onSelect={() => nuiCallback('toggleK9', 'rescue')} />\r\n                        <Item label=\"Security\" onSelect={() => nuiCallback('toggleK9', 'security')} />\r\n                    </SubMenu>\r\n                </SubMenu>\r\n            }\r\n            <SubMenu restricted={k9Data.auth !== true} label=\"Spikes\">\r\n                <Item label=\"Place Spikes\" onSelect={() => setSpikes(false)} />\r\n                <Item label=\"Place 2x Spikes\" onSelect={() => setSpikes(true)} />\r\n                <Item label=\"Remove Spikes\" onSelect={removeSpikes} />\r\n            </SubMenu>\r\n            <SubMenu label=\"Objects\" title=\"Object Spawner\">\r\n                <Item label=\"Police Barrier\" onSelect={() => spawnObject('policeBarrier')} />\r\n                <Item label=\"Road Barrier\" onSelect={() => spawnObject('roadBarrier')} />\r\n                <Item label=\"Road Barrier Arrow\" onSelect={() => spawnObject('roadBarrierArrow')} />\r\n                <Item label=\"Traffic Cone\" onSelect={() => spawnObject('cone')} />\r\n                <Item label=\"Traffic Barrel\" onSelect={() => spawnObject('trafficBarrel')} />\r\n                <Item label=\"Remove Close Objects\" onSelect={deleteCloseObjects} />\r\n            </SubMenu>\r\n            <Item label=\"Hands up\" onSelect={toggleHandsUp} />\r\n        </Menu>\r\n        /*\r\n        display &&\r\n        <div className='Container'>\r\n            <div className='title'>{`[${id}] ${name}`}</div>\r\n            <ul>\r\n                {listItems.map((item, index) => (\r\n                <li key={index} className={index === listIndex ? 'selected' : ''}>{item.label}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n        */\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}